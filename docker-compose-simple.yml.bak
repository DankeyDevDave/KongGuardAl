version: '3.8'

networks:
  kong-net:
    driver: bridge

services:
  # Kong Gateway in DB-less mode
  kong:
    image: kong:3.8.0
    container_name: kong-gateway
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"    # Kong proxy port (HTTP)
      - "8443:8443/tcp"    # Kong proxy port (HTTPS)
      - "8001:8001/tcp"    # Kong admin API (HTTP)
      - "8444:8444/tcp"    # Kong admin API (HTTPS)
    volumes:
      - ./kong-simple.yml:/kong/declarative/kong.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_LOG_LEVEL: debug
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5

  # Demo API Service for Testing
  demo-api:
    image: kennethreitz/httpbin
    container_name: demo-api
    networks:
      - kong-net
    ports:
      - "8085:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/status/200"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mock malicious API for testing threat detection
  mock-attacker:
    image: nginx:alpine
    container_name: mock-attacker
    networks:
      - kong-net
    ports:
      - "8090:80"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kong-redis
    networks:
      - kong-net
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50