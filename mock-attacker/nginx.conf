events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;
        root         /usr/share/nginx/html;
        index        index.html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Normal endpoint
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Simulate various attack patterns for testing
        
        # SQL Injection simulation
        location /api/users {
            add_header Content-Type application/json;
            return 200 '{"users": [{"id": 1, "name": "test"}]}';
        }

        # XSS simulation endpoint
        location /api/search {
            add_header Content-Type application/json;
            return 200 '{"results": [], "query": "normal search"}';
        }

        # High-frequency endpoint for rate limiting tests
        location /api/rapid {
            add_header Content-Type application/json;
            return 200 '{"timestamp": "2024-01-01T00:00:00Z", "data": "rapid response"}';
        }

        # Large payload endpoint
        location /api/upload {
            client_max_body_size 10M;
            add_header Content-Type application/json;
            return 200 '{"status": "uploaded", "size": "large"}';
        }

        # Error simulation endpoints
        location /api/error/400 {
            return 400 '{"error": "Bad Request"}';
        }

        location /api/error/401 {
            return 401 '{"error": "Unauthorized"}';
        }

        location /api/error/403 {
            return 403 '{"error": "Forbidden"}';
        }

        location /api/error/404 {
            return 404 '{"error": "Not Found"}';
        }

        location /api/error/500 {
            return 500 '{"error": "Internal Server Error"}';
        }

        # Suspicious patterns for testing
        location /admin {
            return 403 '{"error": "Admin access forbidden"}';
        }

        location /.env {
            return 404 '{"error": "File not found"}';
        }

        location /config {
            return 403 '{"error": "Config access forbidden"}';
        }
    }
}